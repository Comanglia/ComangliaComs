// ----------------------------------------------------------------------------
// Comanglia-comms a FPS config originally inspired by Chris, and with heavy influence
// from Mastercoms "comfig" reference version v6.10.0 
// Special Thank you to Sage for helping to update this when I couldn't/wouldn't
// Beta1 of v2
// ----------------------------------------------------------------------------
// Launch options:
// You don't have to remove -dxlevel from the launch options after the first launch!
//
// Fullscreen: -dxlevel 81 -full -w WIDTH -h HEIGHT -console -novid 
// Windowed:   -dxlevel 81 -sw -w WIDTH -h HEIGHT -console -noborder -novid 
// -useforcedmparms -noforcemaccel -noforcemspd // All of these are outdated and don't matter anymore
//
// DX Levels
// -dxlevel 80, -dxlevel 81, -dxlevel 90, -dxlevel 91, -dxlevel 95, -dxlevel 98
// if you can use -dxlevel 81 USE IT your fps will be significantly more stable
// avoid -dxlevel 80 it is rather buggy
//
// DXLEVEL and Nvidia notes
// some Nvidia users may experience a weird strobing effect in DX8
// Most Nvidia cards and drivers support DX8 fine, but if you have issues usually
// the latest drivers work fine, otherwise you may have to find a really old driver.
//
// DXLEVEL and AMD GPUs notes
// Some AMD cards in relatively recent drivers don't have rocket trails in DX 8
// To some this is a good thing (more FPS) to others it's a bad thing since it makes 
// rockets harder to see.
// ----------------------------------------------------------------------------

sv_cheats 1 // Prevent fog cvar spew in console on startup

// ----------------------------------------------------------------------------
// FPS cap
// ----------------------------------------------------------------------------
// The primary benefit of an FPS cap is to make the FPS more stable, other than
// that, it doesn't do a lot. A moderate, consistent framerate is much more
// desirable than a variable but sometimes high framerate. A common
// misconception is that if any more frames are generated than your monitor can
// display, they are useless. This is wrong -- frames are used for much more 
// mere display, and affect the way the game feels well past your refresh rate. 
// Notes  from Mastercomms
//	// Some Source systems assume the FPS will not go above 300
//	// Finally, using 240 is a common multiple for monitor framerates,
//	// which is recommended for smoothness
// ----------------------------------------------------------------------------

//fps_max 0		// If for some reason you have odd choppyness and or stutters with a FPS cap
					// use this. If stutters get worse try a lower FPS cap than you had before.
//fps_max 132 	// Chris's old max_fps recommendation
//fps_max 141 	// This is meant for 144Hz G-Sync/FreeSync users who want to avoid the
					// extra input lag at 144+ FPS. 
//fps_max 162	// This is meant for 165Hz G-Sync/FreeSync users who want to avoid the
					// extra input lag at 165+ FPS.  
//fps_max 177	// This is meant for 180Hz G-Sync/FreeSync users who want to avoid the
					// extra input lag at 180+ FPS. 
//fps_max 237	// This is meant for 240Hz G-Sync/FreeSync users who want to avoid the 
					// extra input lag at 240+ FPS. 	
										
// ****** If you don't know what to use try the below this line ******					
fps_max 240	// Mastercoms recommendation for 60Hz, 120Hz and 240Hz users.

//fps_max 288	// Mastercoms recommendation for 144Hz users.					
//fps_max 300	// TF2 Default, Mastercoms recommendation for 75Hz users.
//fps_max 990	// Used to prevent bugs from having over 1000FPS typical on local servers
	
// ----------------------------------------------------------------------------
// Sprays
// ----------------------------------------------------------------------------
// Bear in mind that these are disabled on league servers due to `sv_pure 2'
// anyway, so if you play competitive TF2, this won't help you.
// ----------------------------------------------------------------------------

cl_playerspraydisable 1
r_spray_lifetime 0		// Number of rounds a spray is displayed, if you want sprays
							// Set this to 2

// ----------------------------------------------------------------------------
// Shadows
// ----------------------------------------------------------------------------
// Shadows are rather intensive and although it can offer a competitive advantage
// with seeing shadows around corners, on / through walls, etc. It's rarely worth
// the loss in FPS.
// ----------------------------------------------------------------------------

r_shadows 0						// Disables shadows entirely
		//1						// Enables shadows
nb_shadow_dist 0 
			// 400				// Recommended Value if using shadows
r_shadowmaxrendered 0 			// Max shadows rendered 
				//  12			// For 6s
				//  18			// For HL
				//  32			// 32 person servers
r_shadowrendertotexture 0 		// Don't use 2 materials for shadows (uses memory and rendering time)
					//  1 		// Prettier shadows

r_flashlightdepthtexture 0 		// Disable the CPU intensive depth texturing for shadows
						// 1 	// Even prettier shadows
//r_flashlightdepthres 4096 	// Sharper shadows (alternatively try: 8192, 2048, 1024, 512), 
									// higher is higher quality
									
//mat_shadowstate 1

//cl_blobbyshadows 1 			// shadows are blobs less intensive. 
				// 0			// for normal shadows

// ----------------------------------------------------------------------------
// LOD (Level of Detail)
// ----------------------------------------------------------------------------

r_lod -1			// Use r_rootlod to properly fade through LODs
						// r_lod 0 will always use the highest LOD possible
r_rootlod 2			// Maximum performance for models. 
		//1 		// Better model quality with little loss in FPS
		//0 		// Max Quality, likely to decrease FPS
						
lod_transitiondist -1 		// Do not fade in map objects for maximum performance
				//-5000 	// Fade map objects over a long distance to reduce
								// pop in and clutter while still increasing performance
				//-5001 	// Fade map objects across a shorter distance to
								// slightly reduce pop in while still increasing performance
				//800		// Start fading map objects only when they are very far away, 
								// decreases performance but has the least pop in
							
mat_max_worldmesh_vertices 65536 	// Use maximum mesh vertices to reduce mesh count
						// 1024		// Reduce invididual mesh complexity for weak GPUs 
										// Intergrated GPU users would probably benefit from
										// this setting at 1024.

// ----------------------------------------------------------------------------
// Lighting
// ----------------------------------------------------------------------------	

r_ambientboost 0 	// Disable to save the small amount of CPU this uses	
			// 1 	// Boost reflected light, may help seeing in dark areas
						// AFAIK this only affects DX 9.  0/1 has no visual difference in DX 8
r_ambientmin 0 		// Disables ambient boost at all light levels even if turned on
		//   0.5 	// Allow for ambient boost even in brighter light levels, makes characters stand out 
		//   0.3 	// TF2 default
		//   0.1 	// Ambient boost less often, realistic darkness
		//   1.1 	// Ambient boost every time		

r_rimlight 0 		// Disable light around character edges, very small FPS increase, 
						//rimlight uses GPU only			
		// 1		// for better visibility of classes
						// This value has no/negligible visual difference in DX 8
mat_phong 0			// Disable phong for flatter shading			
		// 1		// Use a phong shader for shading/reflection
						// This value has no/negligible visual difference in DX 8

r_dynamic 0 		// Disable dynamic lighting (muzzle flash lighting, explosions 
						// and other lighted effects)
r_maxdlights 0 		// Do not allow any dynamic lights	
			// 9 	// Mild Reduction in max dynamic lights
			// 32 	// Max number of dynamic lights

muzzleflash_light 0 			// Disable muzzle flash lights
				//1 			// Enable muzzle flash lights			
cl_muzzleflash_dlight_1st 0  	// Disable muzzle flash lights in first person

r_worldlights 0 			// Disable world lights
			// 2			// Reduce maximum lights applied to a vertex
			// 4			// Use the maximum amount of world lights
r_worldlightmin 0.1			// Reject a lot of minor world lighting 
				// 10 		// Reject all world lighting
				// 0.004	// Do not render insignificant world lighting 
				// 0.0002 	// Render practically all world lighting

r_lightaverage 0 	// Disable lighting job that uses a lot of CPU even if it's not needed/noticeable
			// 1 	// Enable time averaging of lighting to reduce popping				
mat_disable_lightwarp 1 	// Disable light warps	
mat_filterlightmaps 1 		// Filter lightmaps. Some users may prefer the blocky
								// look of 0. Negligible FPS difference on or off
mat_reducefillrate 0		// Shouldn't make a difference in DX8, looks better in DX9 
								// and uses less CPU resources
				// 1 		// Simplify material shading and use some DX8 features.
mat_softwarelighting 0

// ----------------------------------------------------------------------------
// Effects
// ----------------------------------------------------------------------------
// Controls weapon and other miscellaneous effects								
// ----------------------------------------------------------------------------

tracer_extra 0 					// Remove extra fluff to bullet lines that make them thicker
			// 1 				// Make bullet lines more visible, low performance impact
//r_drawtracers_firstperson 	// Goto QOL.cfg if you want to change this value.
cl_ejectbrass 0 				// Disable shell ejection from pistols, shotgun, minigun, etc
			//1 				// Enable shell ejection
						
cl_show_splashes 0 				// Disable water splashes
				// 1 			// Enable water splashes

cl_fasttempentcollision 20 		// Check every 20 frames for collisions on syringes, shell ejection, blood, and  
									// some other effects Mastercomfig Low to Medium High uses this setting
					//  10 		// Check collisions every 10 frames
					//  9999 	// Skip collision checking
					//  1 		// Check collisions every frame

// ----------------------------------------------------------------------------
// Water
// ----------------------------------------------------------------------------
// Water reflections
// ----------------------------------------------------------------------------

r_cheapwaterstart 0 			// Use cheap water as much as possible
				//600 			// The distance at which transitionary cheap water starts. 
									// Has less reflectivity.
				//3000 			// Do not use cheap water
r_cheapwaterend 0.1 			// Use cheap water as much as possible
			//  1000 			// The distance at which fully cheap water starts. 
									// Does not reflect or refract and it is solid
			//  5000 			// Do not use cheap water
			
r_WaterDrawReflection 0 		// Water reflections disabled for more performance
					//1 		// Enable water reflections
r_waterforceexpensive 0 		// Do not force expensive water
					//1 		// Force higher quality water					
r_waterforcereflectentities 0 	// Do not force entity water reflections
						// 	1 	// Enable entity water reflections						
r_WaterDrawRefraction 1 		// Enable water refraction as water is hard to look at otherwise
					//0 		// Disable water refraction for maximum FPS
r_ForceWaterLeaf 1 				// Optimize vis

// ----------------------------------------------------------------------------
// Particles
// ----------------------------------------------------------------------------
// Particle effects
// ----------------------------------------------------------------------------

cl_particle_batch_mode 1 		// Use default particle batch mode
					// 2 		// Use particle batch mode 2, causes missing particles		
					
tf_particles_disable_weather 1 	// Disable rain, snow and ash particles
						//   0 	// Increases number of particle systems on some maps, less FPS
						
mat_reduceparticles 1 		// Reduce number of particles, but it only helps a little bit because 
								// the real performance impact comes from creating particle systems
				//  0 		// Use the full number of particles
				
cl_new_impact_effects 0 	// Use the old particle system for bullet impact particles
					//1 	// Use the new particle system for bullet impact particles					
r_drawflecks 0 				// Do not create particle systems when things hit surfaces, 
								// increases FPS and reduces distractions
		//   1 				// Draw flecks from impacts
		
r_particle_sim_spike_threshold_ms 0 	// Early finish to unused particle performance stats

// ----------------------------------------------------------------------------
// Post Processing
// ----------------------------------------------------------------------------
// Extra visual effects
// ----------------------------------------------------------------------------

mat_postprocessing_combine 0 	// Individually checked passes for post processing
						// 1 	// Combine post processing effects !use this if you
									// want to use post processing!
//mat_postprocess_x 4 			// Tessellate post processing slightly more
//mat_postprocess_y 4 			// ^
									// Both of these are the recommended setting if you 
									// want to use postprocessing
mat_disable_bloom 1
mat_hdr_enabled 0							
mat_hdr_level 0 		// LDR
		//    1 		// LDR and bloom
		//    2 		// HDR and bloom

//r_bloomtintexponent 2.2 			// Intensity of bloom effect 
										//Use this if you enable postprocessing
mat_bloom_scalefactor_scalar 0 		// Intensity of bloom emitters
						//   1			//Use 1 if you enable postprocessing
mat_non_hdr_bloom_scalefactor 0 	// Completely disable bloom on LDR

building_cubemaps 0 	// Allow for post processing and pixel visibility testing

mat_colorcorrection 0 					// Disable color correction to skip post processing
				//  1 					// Enable color correction, pretty much free effect
mat_colcorrection_disableentities 1 	// Disable entity color correction
mat_use_compressed_hdr_textures 1 		// Use compressed HDR textures (if for some reason it is enabled)
							
// ----------------------------------------------------------------------------
// Pyrovision
// ----------------------------------------------------------------------------
// Pyrovision visual effects
// ----------------------------------------------------------------------------

pyro_dof 0 						// Skip a SSAO depth pass for pyrovision
	//   1 						// Enable pyrovision dof
pyro_vignette 0 				// Disable vignette for pyrovision
			//1 				// Static pyrovision vignette
			//2 				// Dynamic pyrovision vignette			
//pyro_vignette_distortion 0 	// Disable vignette distortion for pyrovision
						// 1 	// Enable pyrovision vignette distortion
								// If for some reason you enable pyrovision vignette 
									// these are some additional options.

// ----------------------------------------------------------------------------
// Motion Blur
// ----------------------------------------------------------------------------
// These settings will adjust the blurring effect from rotation and movement
// I did not add  all the motion blur settings to this because TF2 motion blur 
// is amongst the worst I've seen. If you use Transparent Viewmodels go to
// autoexec.cfg and uncomment the line that has "TransparentViewmodels.cfg"
// ----------------------------------------------------------------------------

mat_motion_blur_enabled 0 			// Disable motion blur
mat_motion_blur_forward_enabled 0
mat_motion_blur_strength 0

// ----------------------------------------------------------------------------
// Antialiasing
// ----------------------------------------------------------------------------
// These settings will adjust the smoothing of jagged edges
// Left most of these commented out due to issues with mumble overlay
// ----------------------------------------------------------------------------

//mat_antialias 1 			// Do not do antialiasing
			//  8			// Max MSAA (8x) (1,2,4,6,8 are all useable values)			
//mat_aaquality  0			// Disable CSAA
			//   4			// Max CSAA (4x) (you can also use 2)
//mat_alphacoverage 0 		// Disable alpha-to-coverage
				//  1 		// Enable alpha-to-coverage,which improves AA on thin
								// overlapping surfaces
							
mat_software_aa_strength 0 			// Do not do software AA
					//   1 			// Enable software AA						
mat_software_aa_strength_vgui 0 	// Do not do software AA on the HUD
							//1 	// Enable VGUI software AA							
//mat_software_aa_quality 0 		// Lower quality software AA
						//1 		// High quality software AA
					
//mat_software_aa_edge_threshold 0.5 		// Balance between soft and sharp edges
//mat_software_aa_blur_one_pixel_lines 0.5 	// Balance between softness and
												// sharpness on thin stuff, like cables
										   
// ----------------------------------------------------------------------------
// Textures & Texture Filtering
// ----------------------------------------------------------------------------
// These settings will adjust the texture smoothing/filtering
// ----------------------------------------------------------------------------

mat_filtertextures 1		// Setting this to 0 will make textures look a bit blockier
								// Only really weak GPUs will benefit from using 0
mat_trilinear 1 			// trilinear
			//0 			// bilinear to squeeze out every last bit of performance
								// 1 looks a lot better and only the weakest GPUs would
								// see a FPS benefit from using 0
mat_forceaniso 1 			// Disable anisotropic filtering
							// Levels of anisotropic filtering (2, 4, 8, 16)
mat_mipmaptextures 1 		// Mipmap textures							
mat_picmip 1 				// Low Quality: Uses least amount of memory 
		// 2 				// Lowest Quality
		// -1 				// Highest Quality
								// shouldn't effect FPS except on really weak GPUs
mat_compressedtextures 1 	// Allow for compressed textures

mat_disable_fancy_blending 1 	// Disable fancy blending of textures
						// 0 	// Enable fancy blending of textures

mat_bumpmap 1 		// Enable bumpmaps
		//  0 		// Disable bumpmap materials
					// Controls bumpmapping. Setting this to 0 on dx9 will cause
						// a strange `shine' effect to appear on all players. - Chris
						// In the past I wasn't able to prove that disabling this was significant, 
						// it effects fps by about 1% after several checks - Comanglia				
mat_specular 1 		// Enable specular
		//   0 		// Disable specular materials
					// Controls specularity. Setting this to 0 will make ubers
						// non-shiny, and will remove some specular effects from in-game
						// entities which support it. - Setting this to 0 while trilinear is off 
						// lowers framerate for reasons I don't understand - Comanglia
				
// ----------------------------------------------------------------------------
// Facial features
// ----------------------------------------------------------------------------

r_flex 0 		// Disable facial animations
	// 1 		// Enable facial animations. Requires more bones to setup on CPU
flex_rules 0 	// Disable facial animations
		// 1 	// Enable facial animations
flex_smooth 0 	// Don't smooth facial animations
		//  1 	// Smooth facial animations
		
anim_3wayblend 0 	// Disable 3-way animation blending
			// 1 	// Enable 3-way animation blending
			
ai_expression_optimization 1 	// Do an extra visibility check for flex
									// animations if we are above the target FPS,
									// otherwise disable flex anims			
						// 0 	// Disable expression optimization 
ai_expression_frametime 0 		// Disable expressions entirely
					//  0.0151 	// Disable expressions if we are below ideal FPS

r_teeth 0 				// Do not render teeth, small FPS boost
	//  1 				// Render teeth
r_eyes 0 				// Disable eyes
	// 1 				// Draw character eyes. Actually a noticeable FPS decrease
r_eyemove 0 			// Disable eye movement
		//1 			// Control if character eyes should move, does not really affect performance
r_glint_procedural 0 	// Use the default eye glinting method
				// 1 	// Use CPU eye glinting for weak GPUs
blink_duration 0 		// Disable blinking
			// 0.2 		// Duration of an eye blink
			
tf_clientsideeye_lookats 0 	// Disable eye lookats
					//   1 	// Control if character eyes should look at you,
								// does not really affect performance

phonemefilter 0.001 	// Do not box filter lip sync
			//0.1 		// Box filter lip sync for slightly longer			
phonemesnap 0 			// Do not crossfade a second lip sync on any LOD
		//  7 			// Crossfade a second lip sync on every LOD
		
mp_usehwmmodels -1		// Do not use or load high quality characters
mp_usehwmvcds   -1		// Do not use or load high quality character facial expressions

// ----------------------------------------------------------------------------
// Decals
// ----------------------------------------------------------------------------
// Overlay textures on models
// ----------------------------------------------------------------------------
// General
// -------------
// Bullet holes and overall decal support
// -------------

r_decals 9 			// Allow to check bullet spread (must be the same as mp_decals)
	//   0 			// Disable decals
	//   96 		// Optimized high decal count
	//   2048 		// Maximum decal count
mp_decals 9 		// Allow to check bullet spread (must be the same as r_decals)
		//0 		// Disable decals
		//96 		// Optimized high decal count
		//2048 		// Maximum decal count
		
r_drawbatchdecals 0 		// not necessary for 9 decals
				//1 		// use this if using a lot of decals
r_decal_cullsize 256 		// Hide decals unless they are relatively big
			//   20 		// Optimized decal cullsize if you want to still see decals from far away
r_decal_cover_count 1 		// Remove decal when there is 1 decal in its place/close to covering it
				//  4 		// Allow for more decals covering each other				
r_decal_overlap_area 0.4 	// Remove decal when there is another decal barely covering it
				//   0.8 	// Allow for decals to overlap each other more				
r_decal_overlap_count 0 	// Do not allow decals to overlap each other
					//3 	// Allow for 3 decals to overlap each other

// ------------------
// Model Decals
// ------------------

r_drawmodeldecals 1 	// Enable model decals prevents some bugs, with negligible performance hit.
				//0 	// Disable blood decals on bodies. Prevents new objects to be created that decals 
							// apply onto. Also causes a bug with red bullet decals on wood models
r_maxmodeldecal 9 		// Optimize maximum model decal count		

// ----------------
// Map Decals
// ----------------

r_renderoverlayfragment 0 	// Disable overlays, small performance increase
					//  1 	// Enable overlays to see some decal based logos and posters on walls
r_overlayfadeenable 1
r_overlayfademax 2000
r_overlayfademin 1750
// above commands are left in incase someone enables the overlayfragment
			
// ----------------------------------------------------------------------------
// Ragdolls
// ----------------------------------------------------------------------------
// You will have reduced performance on deaths which produce ragdolls.
// ----------------------------------------------------------------------------

cl_ragdoll_fade_time 0
				//   -3 		// Remove ragdoll fade out delay
				//   15 		// Fade out ragdolls in 5 seconds				
cl_ragdoll_forcefade 1 			// Effectively disables ragdolls by instantly fading them
				//   0 			// Enable ragdolls				
cl_ragdoll_physics_enable 0		// Disables ragdoll physics
					//    1 	// Enable ragdolls physics for meaningful ragdolls
ragdoll_sleepaftertime 0 		// Instantly sleep ragdolls
					// 1		// Wait a reasonable time before sleeping ragdoll physics

// ----------------------------------------------------------------------------
// Gibs
// ----------------------------------------------------------------------------
// You will have reduced performance on deaths which produce gibs if enabled
// ----------------------------------------------------------------------------

props_break_max_pieces 0 	// Disables gibs
					// -1 	// Breaks gibs and some props into pieces they were designed to break into
					// 2 	// Break into a max of 2 pieces			
					
violence_agibs 1 	// Low violence lowers FPS. Disabling removes blood effects.
violence_hgibs 1 	// Low violence lowers FPS. Disabling removes blood effects.
violence_ablood 1 	// framerates on -most- pcs are higher with these on
violence_hblood 1

cl_burninggibs 0	// Disables burning gibs
			// 1	// Enables burning gibs
			
// ----------------------------------------------------------------------------
// Props 
// ----------------------------------------------------------------------------
// Various small objects
// ----------------------------------------------------------------------------

r_PhysPropStaticLighting 1 		// Use premade lighting for props, increases FPS
r_decalstaticprops 0 			// Do not use some lighting data for static props, disable decals on static props
				// 1 			// Use ambient lighting data for static props, enable decals on static props
r_drawopaquestaticpropslast 1 	// Ensure that the modern and currently preferred 
									// rendering method is used				
				
cl_phys_props_enable 0 			// Disable client side physics props
				//   1 			// Enable client side physics props
cl_phys_props_max 20 			// Reduce the physics props limit to a sane one for TF2
				//300 			// Allow all physics props
									// Isn't used when cl_phys_props_enable = 0
cl_phys_props_respawndist 1500 	// Do not spawn props if we can see them 
						//3000 	// Skip respawning physics props for a high distance
						//120 	// Respawn physics props at a slower rate
						//60 	// Respawn physics props faster
									// Isn't used when cl_phys_props_enable = 0

r_propsmaxdist 0		// Old Chris and Comanglia config setting				
			// 900 		// Maximum distance from where client side physics props are visible
			// 3000 	// Always render client side physics props
r_drawdetailprops 0 	// Disable detail props for saving a good bit of FPS
				//1 	// Enable sprites, grass etc
				//2 	// Draw detail props with wireframe		
cl_detaildist 0			// Old Chris and Comanglia config setting		
			//900 		// Draw detail props up to this distance
			//3000 		// Always draw detail props			
cl_detailfade 0 		// Do not fade in detail props // Old Chris and Comanglia config setting
			//900 		// Set to cl_detaildist to always be fading
			//100 		// Fade a small distance
r_staticprop_lod 4 		// Force a really low // Old Chris and Comanglia config setting
			//   -1 	// Automatic LOD for props (fade between the most optimal LODs at a certain distance)
			//   0 		// Force highest LOD (high quality with no fading)
			//   7		// Lowest quality LOD
			
// ----------------------------------------------------------------------------
// General
// ----------------------------------------------------------------------------
// General/overall graphics settings
// ----------------------------------------------------------------------------

mat_viewportscale 1 	// Adjust render resolution 
							// (adjust as a % from 1.0 to 0.1 in increments of 0.1 or 0.05). 
							// This is useful for if your GPU struggles to render a lot of pixels
mat_viewportupscale 1 	// Upscale when using mat_viewportscale
							// I highly recommend leaving this value as is. At best does nothing, at worst 
							// makes alot of your screen black :)

r_3dsky 0 				// Disable 3D sky
	//  1 				// Enable 3D sky
	
r_dopixelvisibility 0			// Disables this feature
				//  1 			// Enable visibility testing for glows, halos and pretty lights				
r_pixelvisibility_partial 0 	// Do not use a costly precise partial visibility algorithm
						//1 	// Use partial visibility algorithm

cl_jiggle_bone_framerate_cutoff 0 	// Always disable jigglebones
							//  67 	// Disable jigglebones if we are under the optimal framerate
							//  1 	// Never disable jigglebones
			
cl_drawmonitors 0				// Do not draw monitors
							
// ----------------------------------------------------------------------------
// Ropes
// ----------------------------------------------------------------------------
// Ropes for Mannpower grappling hook and as decoration in maps
// ----------------------------------------------------------------------------

rope_rendersolid 0 		// Skip rendering solid part of ropes
			//   1 		// Render solid part of ropes			
r_ropetranslucent 0 	// Skip simulating ropes
				//1 	// Simulate ropes				
rope_smooth 0 			// Skip a long smoothing operation for ropes
		//  1 			// Smooth ropes with a fake transparent rope
rope_subdiv 0 			// Skip heavy loops for rope subdivisions
		//  2 			// Subdivide ropes
		//  7 			// Max rope subdivides
rope_collide 0 			// Skip CPU heavy world collisions for ropes
		//   1 			// Enable rope collisions		
rope_wind_dist 0 		// Do not apply CPU intensive wind to ropes
			// 1000 	// Apply wind to ropes until this distance
rope_averagelight 1 	// Only use average light, instead of an extra max intensity average with 0
				//0 	// Simplify rope lighting for weak GPUs, at the cost of a bit of CPU time

// ----------------------------------------------------------------------------
// Optimization
// ----------------------------------------------------------------------------
// These settings will optimize TF2 without having any very noticeable effects to
// the user
// ----------------------------------------------------------------------------
			
mat_vsync 0 	// Ensure VSync is disabled by default

engine_no_focus_sleep 0 	// Do not limit FPS when the engine is not focused because
								// the focus detection can be buggy on some systems or while
								// streaming and may limit your FPS, without you knowing
					//50 	// Power savings while alt-tabbed out of TF2
					
r_fastzreject 1 	// Renders first pass of a scene with a z-buffer on the CPU and
						// then has the GPU quickly render the scene in a second pass,
						// with the visible parts of the scene already calculated
				
r_occlusion 0 			// Use less CPU at the cost of a bit more GPU usage
		//  1			// Use CPU to have the GPU skip rendering models/props you cannot see
r_occludeemaxarea 1 	// Skip occlusion of objects that are too large to test for
r_occluderminarea 10 	// Skip occluders that are too small to block anything worth our time

mat_tonemapping_occlusion_use_stencil 0 	// Do not use stencil buffer for occlusion queries
									//1 	// Use stencil buffer for weak GPUs

host_flush_threshold 0 	// Early finish to a Xbox 360 only flush task

r_norefresh 1 	// Do not store a useless and unused frame time variable

fast_fogvolume 1 	// Use a fast path method to find the visible fog volume
r_pixelfog 1 		// Use a pixel shader for fog if possible
		// 0 		// Do not use a higher level pixel shader for fog on weak GPUs
						// Weak GPUs would see a benefit from using 0 but 1 greatly improves
						// Visibility in DX9. No effect on DX 8.
					
sv_alternateticks 0 	// Run every tick
				//1 	// Skip every other tick. Makes local servers pretty awful
				
mod_offline_hdr_switch 1

// ----------------------------------------------------------------------------
// OpenGL
// ----------------------------------------------------------------------------
// Optimizations for OpenGL platforms (Linux and macOS)
// ----------------------------------------------------------------------------

//mat_texture_reload_frame_swap_workaround 1 	// Work around texture data being unnecessarily 
													// stored on some drivers by doing frame swaps
													
gl_pow2_tempmem 1 					// Makes memory allocation behavior more stable
gl_mtglflush_at_tof 1 				// Makes frames output smoother, at slightly less FPS
gl_debug_output 0 					// Disable debug messages
gl_magnify_resolve_mode 1 			// Use fastest resolve mode when up scaling too
gl_paircache_rows_lg2 11 			// Increase shader pair cache size
gl_paircache_ways_lg2 5 			// Keep some loops small by using minimum ways size
//gl_can_resolve_flipped 1 			// Enable page flipping without checking hardware support
//gl_amd_occlusion_workaround 0 	// Disable AMD occlusion workaround

// ----------------------------------------------------------------------------
// Netgraph
// ----------------------------------------------------------------------------
// Advanced HUD display of network info and FPS
// ----------------------------------------------------------------------------

//net_graph 0 	// netgraph display
				// 0 = no graph, 
				// 1 = text only, 
				// 2 = graph, 
				// 3 = legend + choke/loss, 
				// 4 = server perf stats
			  
//net_graphpos 1 	// the horizontal position of the netgraph
					// 0 = left, 
					// 1 = right, 
					// 2 = middle
					// anything else will set the x coordinate of the graph's left edge
				
//net_graphheight 64 			// height of the text part of the graph
//net_graphproportionalfont 1 	// scale fonts as the screen resolution goes up
//net_scale 5 					// the height of the graph portion
net_graphsolid 0 				// draw height ticks as single ticks (small optimization)
//net_graphsolid 1 				// Revert back to the Half-Life 1 behavior of drawing a full rectangle
//net_graphtext 1 				// draw text fields
//net_graphmsecs 400 			// over how many milliseconds should the text area measure
//net_graphshowlatency 1 		// show the latency part of the graph
//net_graphshowinterp 1 		// show the interpolation part of the graph

// ----------------------------------------------------------------------------
// Console
// ----------------------------------------------------------------------------
// Developer console customization
// ----------------------------------------------------------------------------

con_nprint_bgalpha 100 		// Console translucency (0 to 255) for special debug messages
				// 255 		// Disable transparency for lowend computers
con_nprint_bgborder 1 		// Console border for special debug messages
				//  0 		// Disable border on lowend computers

// ----------------------------------------------------------------------------
// Misc
// ----------------------------------------------------------------------------
// Settings that do not fit into a category
// ----------------------------------------------------------------------------

bugreporter_uploadasync 1 	// Upload bug reporter attachments asynchronously
ai_frametime_limit 0.0152 	// Use simpler NPC AI if the frametime is too low, 
								// useful for Source singleplayer and mods
				// 50 		// Do not use simpler AI

// ----------------------------------------------------------------------------
// Memory
// ----------------------------------------------------------------------------
// Adjustments to memory allocation
// ----------------------------------------------------------------------------

mem_max_heapsize_dedicated 128 	// Increase memory cap on 512MB systems

lzma_persistent_buffer 1 	// Keep the LZMA compression system in memory to prevent reloads of it
cl_always_flush_models 0 	// Keep models loaded in between map loads and prevent crashes from model flushing
					// 1 	// Remove models from memory every map load to keep memory usage low
mat_levelflush 1 			// Clear temporary memory to prevent overloading memory stores
sv_forcepreload 0 			// Disable harmful force preload enabled in other configs
mat_bufferprimitives 1 		// Skip flushing of primitives when meshes draw

// ----------------------------------------------------------------------------
// Filesystem
// ----------------------------------------------------------------------------
// Set buffer and file read sizes
// Set up filesystem parameters
// Control loading and caching models
// ----------------------------------------------------------------------------

filesystem_buffer_size 8192 	// Use a 8KB buffer for the filesystem
filesystem_max_stdio_read 31 	// Use standard read cap
						//64 	// Use a higher max read cap (64MB)		
filesystem_native 1 			// Use native filesystem calls if available
filesystem_unbuffered_io 1 		// Allow for unbuffered IO where appropriate since it can be async

mod_load_anims_async 1 		// Enable async animation loading
mod_load_mesh_async 1 		// Enable async mesh loading
mod_load_vcollide_async 1 	// Enable async vcollide loading
mod_lock_mdls_on_load 0 	// Do not lock models due to some issues with them being locked
mod_forcetouchdata 1 		// Put all model data into cache on load
mod_touchalldata 1 			// Load submodels
mod_forcedata 1 			// Cache submodel data
			//0				// Enabling this causes models to not be loaded async	***		

// ----------------------------------------------------------------------------
// Threading and other optimizations
// ----------------------------------------------------------------------------

mat_queue_mode 2 	// defines the threading method to be used by the material
					// system.
					// Here are the possible values:
					//     -2 legacy default
					//     -1 default
					//      0 synchronous single thread
					//      1 queued single thread
					//      2 queued multithreaded
					// If you have problems with `2', try setting it to`-1'.
					
cl_threaded_client_leaf_system 1 		// Asynchronously add new renderables and compute blends 
										// for added renderables
r_queued_decals 0 					// Disabled by default due to crashes
r_queued_ropes 1 					// Queue some rope rendering using the material system
			// 0					// Disable queued ropes for CPUs with less than 4 cores
r_queued_post_processing 0 			// Disabled by default because it usually fails to render the 
										// post processing effects in time for the frame render
					//   1 			// Offloads post processing to the material system
										// Performance improvement if your driver/GPU works with it
r_threaded_client_shadow_manager 1 	// Multithreaded shadow computations/rendering
							//   0 	// Use traditional behavior for CPUs with less than 4 cores
r_threaded_particles 1 				// Process particle systems in parallel
				//   0 				// Process particle systems one at a time for CPUs with 1 core
r_threaded_renderables 1 			// Asynchronously set up bones on animated entities
					// 0 			// Use traditional behavior for CPUs with 1 core
cl_setupallbones 0 					// Do not force every animation component of a model to be set up
r_lightcache_zbuffercache 1 		// Load z cache data with the map
studio_queue_mode 1 				// Use queue calls for studio renders
				//0 				// Do not use queue calls for CPUs with 1 core
host_thread_mode 1 					// Use the threaded frame behavior
mat_clipz 1 						// Clips what is drawn for a performance improvement

r_fastzreject 0 			// Modern GPUs (hardware feature level d3d10) do not need the help
			//1 			// Renders first pass of a scene with a z-buffer on the CPU and then has the GPU
								// quickly render the scene in a second pass, with the visible parts 
								// of the scene already calculated
r_hunkalloclightmaps 0 		// If a lightmap cannot be fit into the hunk, use dynamic memory
				//   1 		// Allocate lightmaps in the hunk
								
// ----------------------------------------------------------------------------
// Print to console
// ----------------------------------------------------------------------------
echo "---------------------------------------------------------------------"
echo "Comangliacoms config loaded. Inspired by Chris config & Mastercomfig"
echo "---------------------------------------------------------------------"
